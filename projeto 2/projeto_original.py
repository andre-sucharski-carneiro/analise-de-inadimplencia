import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import streamlit as st

sns.set(context='talk', style='ticks')

# Configura√ß√£o da p√°gina
# Garantindo que o t√≠tulo da p√°gina seja codificado corretamente em UTF-8
st.set_page_config(
    page_title="An√°lise de Inadimpl√™ncia",
    page_icon="üìâ",  # Emoji compat√≠vel com Streamlit
    layout="wide",
)

# T√≠tulo principal
st.markdown("# üìä An√°lise Explorat√≥ria da Previs√£o de Renda")
st.markdown("Este painel apresenta visualiza√ß√µes explorat√≥rias com base nas vari√°veis que influenciam a renda dos clientes de uma institui√ß√£o financeira. A an√°lise busca identificar padr√µes relevantes para futuras etapas de modelagem preditiva.")

# Leitura dos dados
url = "https://raw.githubusercontent.com/andre-sucharski-carneiro/analise-de-inadimplencia/main/projeto%202/input/previsao_de_renda.csv"
try:
    renda = pd.read_csv(url)
except Exception as e:
    st.error(f"Erro ao carregar os dados: {e}")
    st.stop()

# Gr√°ficos ao longo do tempo
st.markdown("---")
st.markdown("## üïí Gr√°ficos Temporais")
st.markdown("As visualiza√ß√µes abaixo mostram como a renda se comporta ao longo do tempo em rela√ß√£o a vari√°veis categ√≥ricas.")

fig, ax = plt.subplots(8, 1, figsize=(12, 70))

# Corre√ß√£o: Evitar uso inadequado da fun√ß√£o plot diretamente em DataFrames com ax
sns.histplot(data=renda, x='renda', hue='posse_de_imovel', kde=True, ax=ax[0])
ax[0].set_title("Distribui√ß√£o da renda por posse de im√≥vel")
ax[0].legend(title="Posse de Im√≥vel")

sns.lineplot(x='data_ref', y='renda', hue='posse_de_imovel', data=renda, ax=ax[1])
ax[1].tick_params(axis='x', rotation=45)
ax[1].set_title("Renda ao longo do tempo por posse de im√≥vel")

sns.lineplot(x='data_ref', y='renda', hue='posse_de_veiculo', data=renda, ax=ax[2])
ax[2].tick_params(axis='x', rotation=45)
ax[2].set_title("Renda ao longo do tempo por posse de ve√≠culo")

sns.lineplot(x='data_ref', y='renda', hue='qtd_filhos', data=renda, ax=ax[3])
ax[3].tick_params(axis='x', rotation=45)
ax[3].set_title("Renda ao longo do tempo por quantidade de filhos")

sns.lineplot(x='data_ref', y='renda', hue='tipo_renda', data=renda, ax=ax[4])
ax[4].tick_params(axis='x', rotation=45)
ax[4].set_title("Renda ao longo do tempo por tipo de renda")

sns.lineplot(x='data_ref', y='renda', hue='educacao', data=renda, ax=ax[5])
ax[5].tick_params(axis='x', rotation=45)
ax[5].set_title("Renda ao longo do tempo por n√≠vel de educa√ß√£o")

sns.lineplot(x='data_ref', y='renda', hue='estado_civil', data=renda, ax=ax[6])
ax[6].tick_params(axis='x', rotation=45)
ax[6].set_title("Renda ao longo do tempo por estado civil")

sns.lineplot(x='data_ref', y='renda', hue='tipo_residencia', data=renda, ax=ax[7])
ax[7].tick_params(axis='x', rotation=45)
ax[7].set_title("Renda ao longo do tempo por tipo de resid√™ncia")

sns.despine()
st.pyplot(fig)

# Gr√°ficos bivariados
st.markdown("---")
st.markdown("## üìà Gr√°ficos Bivariados")
st.markdown("As barras representam a m√©dia da renda em fun√ß√£o das vari√°veis categ√≥ricas. Esses gr√°ficos ajudam a entender o impacto direto de cada categoria na vari√°vel alvo.")

fig2, ax = plt.subplots(7, 1, figsize=(12, 50))
sns.barplot(x='posse_de_imovel', y='renda', data=renda, ax=ax[0])
ax[0].set_title("Renda m√©dia por posse de im√≥vel")

sns.barplot(x='posse_de_veiculo', y='renda', data=renda, ax=ax[1])
ax[1].set_title("Renda m√©dia por posse de ve√≠culo")

sns.barplot(x='qtd_filhos', y='renda', data=renda, ax=ax[2])
ax[2].set_title("Renda m√©dia por quantidade de filhos")

sns.barplot(x='tipo_renda', y='renda', data=renda, ax=ax[3])
ax[3].set_title("Renda m√©dia por tipo de renda")

sns.barplot(x='educacao', y='renda', data=renda, ax=ax[4])
ax[4].set_title("Renda m√©dia por n√≠vel de educa√ß√£o")

sns.barplot(x='estado_civil', y='renda', data=renda, ax=ax[5])
ax[5].set_title("Renda m√©dia por estado civil")

sns.barplot(x='tipo_residencia', y='renda', data=renda, ax=ax[6])
ax[6].set_title("Renda m√©dia por tipo de resid√™ncia")

sns.despine()
st.pyplot(fig2)